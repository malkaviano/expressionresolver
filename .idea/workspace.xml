<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="7ba73043-d0ca-45c1-b4c2-0bc1c4cf1891" name="Default Changelist" comment="" />
    <ignored path="$PROJECT_DIR$/target/" />
    <ignored path="$PROJECT_DIR$/project/project/target/" />
    <ignored path="$PROJECT_DIR$/project/target/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/main/scala/malkaviano/expressions/comparison/LessThanExpression.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="76">
              <caret line="4" column="78" selection-start-line="4" selection-start-column="78" selection-end-line="4" selection-end-column="78" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Scala Class" />
      </list>
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/main/scala/malkaviano/expressions/Expression.scala" />
        <option value="$PROJECT_DIR$/project/Dependencies.scala" />
        <option value="$PROJECT_DIR$/build.sbt" />
        <option value="$PROJECT_DIR$/src/main/scala/malkaviano/expressions/AndExpression.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/malkaviano/expressions/OrExpression.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/malkaviano/expressions/AndExpressionSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/malkaviano/expressions/OrExpressionSpec.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/malkaviano/expressions/NotExpression.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/malkaviano/expressions/NotExpressionSpec.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/malkaviano/expressions/logicals/OrExpression.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/malkaviano/expressions/logical/OrExpression.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/malkaviano/expressions/logical/NotExpressionSpec.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/malkaviano/expressions/Literal.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/malkaviano/expressions/comparison/EqualToExpressionSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/malkaviano/expressions/comparison/LessThanExpressionSpec.scala" />
        <option value="$APPLICATION_CONFIG_DIR$/scratches/scratch.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/malkaviano/expressions/comparison/EqualToExpression.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/malkaviano/expressions/comparison/LessThanExpression.scala" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="67" />
    <option name="y" value="27" />
    <option name="width" value="1823" />
    <option name="height" value="1053" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="PackagesPane" />
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="expressionresolver" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="expressionresolver" type="462c0819:PsiDirectoryNode" />
              <item name="project" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="expressionresolver" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="expressionresolver" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="expressionresolver" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="expressionresolver" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="example" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="expressionresolver" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="malkaviano" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="expressionresolver" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="malkaviano" type="462c0819:PsiDirectoryNode" />
              <item name="expressions" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="expressionresolver" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="malkaviano" type="462c0819:PsiDirectoryNode" />
              <item name="expressions" type="462c0819:PsiDirectoryNode" />
              <item name="comparison" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="expressionresolver" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="expressionresolver" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="expressionresolver" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="expressions" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="expressionresolver" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="expressions" type="462c0819:PsiDirectoryNode" />
              <item name="comparison" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="expressionresolver" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="expressions" type="462c0819:PsiDirectoryNode" />
              <item name="logical" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scratches and Consoles" type="1a2a3e82:ScratchProjectViewPane$MyProjectNode" />
            </path>
            <path>
              <item name="ExpressionResolver" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scratches and Consoles" type="1a2a3e82:ScratchProjectViewPane$MyProjectNode" />
              <item name="Scratches" type="d62648e6:ScratchProjectViewPane$MyRootNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
  </component>
  <component name="RecentsManager">
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="malkaviano.expressions.logical" />
      <recent name="malkaviano.expressions.logicals" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="ScalaTest.LessThanExpressionSpec.Evaluation is true when first operand is less than second operand&#10;Evaluation is false when if operands don't have the same value">
    <configuration name="EqualToExpressionSpec.Evaluation is true when both operands have the same value" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="ExpressionResolver" />
      <setting name="path" value="malkaviano.expressions.comparison.EqualToExpressionSpec" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="malkaviano.expressions.comparison.EqualToExpressionSpec" />
      <setting name="testName" value="Evaluation is true when both operands have the same value" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EqualToExpressionSpec.Evaluation is true when both operands have the same value&#10;Evaluation is false when if operands don't have the same value" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="ExpressionResolver" />
      <setting name="path" value="malkaviano.expressions.comparison.EqualToExpressionSpec" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="malkaviano.expressions.comparison.EqualToExpressionSpec" />
      <setting name="testName" value="Evaluation is true when both operands have the same value&#10;Evaluation is false when if operands don't have the same value" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LessThanExpressionSpec.Evaluation is true when both operands have the same value&#10;Evaluation is false when if operands don't have the same value" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="ExpressionResolver" />
      <setting name="path" value="malkaviano.expressions.comparison.LessThanExpressionSpec" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="malkaviano.expressions.comparison.LessThanExpressionSpec" />
      <setting name="testName" value="Evaluation is true when both operands have the same value&#10;Evaluation is false when if operands don't have the same value" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LessThanExpressionSpec.Evaluation is true when first operand is less than second operand&#10;Evaluation is false when if operands don't have the same value" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="ExpressionResolver" />
      <setting name="path" value="malkaviano.expressions.comparison.LessThanExpressionSpec" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="malkaviano.expressions.comparison.LessThanExpressionSpec" />
      <setting name="testName" value="Evaluation is true when first operand is less than second operand&#10;Evaluation is false when if operands don't have the same value" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NotExpressionSpec.Evaluation is false when operand is true&#10;Evaluation is true when operand is false" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="ExpressionResolver" />
      <setting name="path" value="malkaviano.expressions.NotExpressionSpec" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="malkaviano.expressions.NotExpressionSpec" />
      <setting name="testName" value="Evaluation is false when operand is true&#10;Evaluation is true when operand is false" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="ScalaTest.LessThanExpressionSpec.Evaluation is true when first operand is less than second operand&#10;Evaluation is false when if operands don't have the same value" />
        <item itemvalue="ScalaTest.LessThanExpressionSpec.Evaluation is true when both operands have the same value&#10;Evaluation is false when if operands don't have the same value" />
        <item itemvalue="ScalaTest.EqualToExpressionSpec.Evaluation is true when both operands have the same value&#10;Evaluation is false when if operands don't have the same value" />
        <item itemvalue="ScalaTest.EqualToExpressionSpec.Evaluation is true when both operands have the same value" />
        <item itemvalue="ScalaTest.NotExpressionSpec.Evaluation is false when operand is true&#10;Evaluation is true when operand is false" />
      </list>
    </recent_temporary>
  </component>
  <component name="SbtLocalSettings">
    <option name="availableProjects">
      <map>
        <entry>
          <key>
            <ExternalProjectPojo>
              <option name="name" value="ExpressionResolver" />
              <option name="path" value="$PROJECT_DIR$" />
            </ExternalProjectPojo>
          </key>
          <value>
            <list>
              <ExternalProjectPojo>
                <option name="name" value="root [file:/home/malkaviano/IdeaProjects/expressionresolver/]" />
                <option name="path" value="$PROJECT_DIR$" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value="ExpressionResolver-build" />
                <option name="path" value="$PROJECT_DIR$/project" />
              </ExternalProjectPojo>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="modificationStamps">
      <map>
        <entry key="$PROJECT_DIR$/build.sbt" value="1062514549" />
        <entry key="$PROJECT_DIR$/project/Dependencies.scala" value="2369556501" />
        <entry key="$PROJECT_DIR$/project/build.properties" value="162545940" />
      </map>
    </option>
    <option name="projectSyncType">
      <map>
        <entry key="$USER_HOME$/Code/akka-in-action" value="PREVIEW" />
        <entry key="$PROJECT_DIR$/../crm-ignition" value="PREVIEW" />
        <entry key="$PROJECT_DIR$/../dinamicexpressionappraiser" value="PREVIEW" />
      </map>
    </option>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7ba73043-d0ca-45c1-b4c2-0bc1c4cf1891" name="Default Changelist" comment="" />
      <created>1546981741769</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1546981741769</updated>
    </task>
    <servers />
  </component>
  <component name="TestHistory">
    <history-entry file="AndExpressionSpec_And_evaluation_should_return_true_when_both_sides_are_true - 2019.01.08 at 18h 00m 37s.xml">
      <configuration name="AndExpressionSpec.And evaluation should return true when both sides are true" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="AndExpressionSpec_And_evaluation_should_return_true_when_both_sides_are_true - 2019.01.08 at 18h 01m 42s.xml">
      <configuration name="AndExpressionSpec.And evaluation should return true when both sides are true" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="AndExpressionSpec_And_evaluation_is_false_when_any_operand_false - 2019.01.08 at 18h 03m 23s.xml">
      <configuration name="AndExpressionSpec.And evaluation is false when any operand false" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="OrExpressionSpec_Evaluation_is_false_when_both_operand_are_false_Evaluation_is_true_when_at_least_one_operand_is_true - 2019.01.08 at 18h 07m 24s.xml">
      <configuration name="OrExpressionSpec.Evaluation is false when both operand are false&#10;Evaluation is true when at least one operand is true" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="NotExpressionSpec_Evaluation_is_false_when_operand_is_true_Evaluation_is_true_when_operand_is_false - 2019.01.08 at 18h 11m 08s.xml">
      <configuration name="NotExpressionSpec.Evaluation is false when operand is true&#10;Evaluation is true when operand is false" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="EqualToExpressionSpec_Evaluation_is_true_when_both_operands_have_the_same_value - 2019.01.08 at 18h 39m 28s.xml">
      <configuration name="EqualToExpressionSpec.Evaluation is true when both operands have the same value" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="EqualToExpressionSpec_Evaluation_is_true_when_both_operands_have_the_same_value - 2019.01.08 at 18h 39m 44s.xml">
      <configuration name="EqualToExpressionSpec.Evaluation is true when both operands have the same value" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="EqualToExpressionSpec_Evaluation_is_true_when_both_operands_have_the_same_value_Evaluation_is_false_when_if_operands_don't_have_the_same_value - 2019.01.08 at 18h 40m 36s.xml">
      <configuration name="EqualToExpressionSpec.Evaluation is true when both operands have the same value&#10;Evaluation is false when if operands don't have the same value" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="LessThanExpressionSpec_Evaluation_is_true_when_both_operands_have_the_same_value_Evaluation_is_false_when_if_operands_don't_have_the_same_value - 2019.01.08 at 20h 48m 35s.xml">
      <configuration name="LessThanExpressionSpec.Evaluation is true when both operands have the same value&#10;Evaluation is false when if operands don't have the same value" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="LessThanExpressionSpec_Evaluation_is_true_when_first_operand_is_less_than_second_operand_Evaluation_is_false_when_if_operands_don't_have_the_same_value - 2019.01.08 at 20h 49m 14s.xml">
      <configuration name="LessThanExpressionSpec.Evaluation is true when first operand is less than second operand&#10;Evaluation is false when if operands don't have the same value" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
  </component>
  <component name="ToolWindowManager">
    <frame x="67" y="25" width="1853" height="1055" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Designer" />
      <window_info id="Favorites" side_tool="true" />
      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.24571112" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info anchor="bottom" id="sbt-shell-toolwindow" />
      <window_info anchor="bottom" id="Version Control" />
      <window_info anchor="bottom" id="Terminal" />
      <window_info anchor="bottom" id="Event Log" side_tool="true" />
      <window_info anchor="bottom" id="Build" weight="0.3297414" />
      <window_info anchor="bottom" id="Messages" weight="0.3297414" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" visible="true" weight="0.3297414" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="right" id="Gradle" />
      <window_info anchor="right" id="Maven" />
      <window_info anchor="right" id="Palette&#9;" />
      <window_info anchor="right" id="sbt" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
    </layout>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/main/scala/malkaviano/sad.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="95">
          <caret line="5" lean-forward="true" selection-start-line="5" selection-end-line="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build.sbt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="114">
          <caret line="6" selection-start-line="6" selection-end-line="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project/Dependencies.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="76">
          <caret line="4" column="64" selection-start-line="4" selection-start-column="64" selection-end-line="4" selection-end-column="64" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/malkaviano/expressions/Expression.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="57">
          <caret line="3" column="23" selection-start-line="3" selection-start-column="23" selection-end-line="3" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/malkaviano/expressions/AndExpression.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="171">
          <caret line="9" column="3" lean-forward="true" selection-start-line="7" selection-start-column="2" selection-end-line="9" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/malkaviano/expressions/NotExpression.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="95">
          <caret line="5" lean-forward="true" selection-start-line="5" selection-end-line="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/malkaviano/expressions/logical/OrExpressionSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="513">
          <caret line="31" column="3" lean-forward="true" selection-start-line="7" selection-start-column="2" selection-end-line="31" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/malkaviano/expressions/OrExpression.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="95">
          <caret line="5" column="36" selection-start-line="5" selection-start-column="36" selection-end-line="5" selection-end-column="36" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/malkaviano/expressions/logical/AndExpressionSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="114">
          <caret line="7" column="22" selection-start-line="7" selection-start-column="22" selection-end-line="7" selection-end-column="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/malkaviano/expressions/logical/AndExpression.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="4" column="11" selection-start-line="4" selection-start-column="11" selection-end-line="4" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/malkaviano/expressions/logical/NotExpression.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="4" column="11" selection-start-line="4" selection-start-column="11" selection-end-line="4" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/malkaviano/expressions/logical/OrExpression.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="76">
          <caret line="4" column="11" selection-start-line="4" selection-start-column="11" selection-end-line="4" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/malkaviano/expressions/logical/NotExpressionSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="418">
          <caret line="24" selection-start-line="24" selection-end-line="24" />
          <folding>
            <element signature="e#40#80#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/malkaviano/expressions/Literal.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="57">
          <caret line="3" column="14" lean-forward="true" selection-start-line="3" selection-start-column="14" selection-end-line="3" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$APPLICATION_CONFIG_DIR$/scratches/scratch_1.scala">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="jar:///usr/lib/jvm/java-8-oracle/src.zip!/java/lang/Object.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="718">
          <caret line="66" column="31" lean-forward="true" selection-start-line="66" selection-start-column="31" selection-end-line="66" selection-end-column="31" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.12.8-sources.jar!/scala/package.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="300">
          <caret line="102" column="34" lean-forward="true" selection-start-line="102" selection-start-column="34" selection-end-line="102" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.12.8-sources.jar!/scala/math/Ordered.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="705">
          <caret line="99" column="15" selection-start-line="99" selection-start-column="15" selection-end-line="99" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/malkaviano/expressions/comparison/EqualToExpressionSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="456">
          <caret line="24" column="3" lean-forward="true" selection-start-line="6" selection-start-column="2" selection-end-line="24" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.12.8-sources.jar!/scala/math/Ordering.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-2151">
          <caret line="164" column="7" selection-start-line="164" selection-start-column="7" selection-end-line="164" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/malkaviano/expressions/comparison/LessThanExpressionSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="418">
          <caret line="22" column="10" lean-forward="true" selection-start-line="22" selection-start-column="10" selection-end-line="22" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$APPLICATION_CONFIG_DIR$/scratches/scratch.scala">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/malkaviano/expressions/comparison/EqualToExpression.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="57">
          <caret line="3" lean-forward="true" selection-start-line="3" selection-end-line="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/malkaviano/expressions/comparison/LessThanExpression.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="76">
          <caret line="4" column="78" selection-start-line="4" selection-start-column="78" selection-end-line="4" selection-end-column="78" />
        </state>
      </provider>
    </entry>
  </component>
</project>